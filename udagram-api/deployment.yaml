apiVersion: apps/v1
kind: Deployment
metadata:
  name: api-app-1
  labels:
    app: api-app-1
spec:
  replicas: 1
  selector:
    matchLabels:
      app: api-app-1
  template:
    metadata:
      labels:
        app: api-app-1
    spec:
      containers:
      - name: udagram-api
        image: ucast84/udagram-api
        ports:
        - containerPort: 8080
        livenessProbe:
          httpGet:
            path: /api/v0
            port: 8080
          initialDelaySeconds: 100
          periodSeconds: 20
          env:
            - name: URL
              valueFrom:
                configMapKeyRef:
                  name: env-config
                  key: URL
            - name: AWS_MEDIA_BUCKET
              valueFrom:
                configMapKeyRef:
                  name: env-config
                  key: AWS_MEDIA_BUCKET
            - name: AWS_PROFILE
              valueFrom:
                configMapKeyRef:
                  name: env-config
                  key: AWS_PROFILE
            - name: AWS_REGION
              valueFrom:
                configMapKeyRef:
                  name: env-config
                  key: AWS_REGION
            - name: JWT_SECRET
              valueFrom:
                configMapKeyRef:
                  name: env-config
                  key: JWT_SECRET
            - name: POSTGRESS_DATABASE
              valueFrom:
                configMapKeyRef:
                  name: env-config
                  key: POSTGRESS_DATABASE
            - name: POSTGRESS_HOST
              valueFrom:
                configMapKeyRef:
                  name: env-config
                  key: POSTGRESS_HOST
            - name: POSTGRESS_PASSWORD
              valueFrom:
                configMapKeyRef:
                  name: env-config
                  key: POSTGRESS_PASSWORD
            - name: POSTGRESS_USERNAME
              valueFrom:
                configMapKeyRef:
                  name: env-config
                  key: POSTGRESS_USERNAME
            volumeMounts:
            - name: aws-secret
              mountPath: "/root/.aws/"
              readOnly: true  
          restartPolicy: Always
          volumes:
          - name: aws-secret
            secret:
              secretName: aws-secret 